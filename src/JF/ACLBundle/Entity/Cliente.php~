<?php

namespace JF\ACLBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Studio
 *
 * @ORM\Table(name="acl_clienti")
 * @ORM\Entity(repositoryClass="JF\ACLBundle\Entity\ClienteRepository")
 * @ORM\HasLifeCycleCallbacks
 */
class Cliente
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nome", type="string", length=128)
     * @Assert\NotBlank()
     */
    private $nome;

    /**
     * @var string
     *
     * @ORM\Column(name="indirizzo", type="string", length=128)
     * @Assert\NotBlank()
     */
    private $indirizzo;

    /**
     * @var string
     *
     * @ORM\Column(name="citta", type="string", length=64)
     * @Assert\NotBlank()
     */
    private $citta;

    /**
     * @var string
     *
     * @ORM\Column(name="cap", type="string", length=5)
     * @Assert\NotBlank()
     */
    private $cap;

    /**
     * @var string
     *
     * @ORM\Column(name="partita_iva", type="string", length=16)
     * @Assert\NotBlank()
     * @Assert\Regex(
     *     pattern="/\([0-9]{11}|[A-Za-z0-9]{16}/",
     *     match=false,
     *     message="Partita IVA non valida"
     * )     
     */
    private $partitaIva;

    /**
     * @var string
     *
     * @ORM\Column(name="telefono", type="string", length=16, nullable=true)
     * @Assert\Regex(
     *     pattern="/^(\+[0-9]{2,4} )?[0-9. \-\/]{4,12}$/",
     *     message="Numero telefono non valido"
     * )     
     */
    private $telefono;

    /**
     * @var string
     *
     * @ORM\Column(name="cellulare", type="string", length=16, nullable=true)
     * @Assert\Regex(
     *     pattern="/^(\+[0-9]{2,4} )?[0-9. \-\/]{4,12}$/",
     *     message="Numero cellulare non valido"
     * )     
     */
    private $cellulare;

    /**
     * @var string
     *
     * @ORM\Column(name="fax", type="string", length=16, nullable=true)
     * @Assert\Regex(
     *     pattern="/^(\+[0-9]{2,4} )?[0-9. \-\/]{4,12}$/",
     *     message="Numero fax non valido"
     * )     
     */
    private $fax;

    /**
     * @var string
     *
     * @ORM\Column(name="email", type="string", length=64)
     * @Assert\NotBlank()
     * @Assert\Email(
     *     message = "L'email '{{ value }}' non Ã¨ valida.",
     *     checkMX = true
     * )
     */
    private $email;

    /**
     * @var string
     *
     * @ORM\Column(name="sito", type="string", length=64, nullable=true)
     * @Assert\Url()
     */
    private $sito;

    /**
     * @var User
     *
     * @ORM\OneToOne(targetEntity="Gestore")
     * @ORM\JoinColumn(name="referente_id", referencedColumnName="id", nullable=true)
     */
    private $referente;

    /**
     * @var User
     *
     * @ORM\OneToMany(targetEntity="Gestore", mappedBy="cliente", cascade="all")
     */
    private $utenze;

    /**
     * @var \DateTime
     *
     * @ORM\Column(name="scadenza_licenza", type="datetime")
     */
    private $scadenzaLicenza;

    /**
     * @var boolean
     *
     * @ORM\Column(name="bloccato", type="boolean")
     */
    private $bloccato;


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nome
     *
     * @param string $nome
     * @return Studio
     */
    public function setNome($nome)
    {
        $this->nome = $nome;
    
        return $this;
    }

    /**
     * Get nome
     *
     * @return string 
     */
    public function getNome()
    {
        return $this->nome;
    }

    /**
     * Set indirizzo
     *
     * @param string $indirizzo
     * @return Studio
     */
    public function setIndirizzo($indirizzo)
    {
        $this->indirizzo = $indirizzo;
    
        return $this;
    }

    /**
     * Get indirizzo
     *
     * @return string 
     */
    public function getIndirizzo()
    {
        return $this->indirizzo;
    }

    /**
     * Set citta
     *
     * @param string $citta
     * @return Studio
     */
    public function setCitta($citta)
    {
        $this->citta = $citta;
    
        return $this;
    }

    /**
     * Get citta
     *
     * @return string 
     */
    public function getCitta()
    {
        return $this->citta;
    }

    /**
     * Set cap
     *
     * @param string $cap
     * @return Studio
     */
    public function setCap($cap)
    {
        $this->cap = $cap;
    
        return $this;
    }

    /**
     * Get cap
     *
     * @return string 
     */
    public function getCap()
    {
        return $this->cap;
    }

    /**
     * Set partitaIva
     *
     * @param string $partitaIva
     * @return Studio
     */
    public function setPartitaIva($partitaIva)
    {
        $this->partitaIva = $partitaIva;
    
        return $this;
    }

    /**
     * Get partitaIva
     *
     * @return string 
     */
    public function getPartitaIva()
    {
        return $this->partitaIva;
    }

    /**
     * Set telefono
     *
     * @param string $telefono
     * @return Studio
     */
    public function setTelefono($telefono)
    {
        $this->telefono = $telefono;
    
        return $this;
    }

    /**
     * Get telefono
     *
     * @return string 
     */
    public function getTelefono()
    {
        return $this->telefono;
    }

    /**
     * Set cellulare
     *
     * @param string $cellulare
     * @return Studio
     */
    public function setCellulare($cellulare)
    {
        $this->cellulare = $cellulare;
    
        return $this;
    }

    /**
     * Get cellulare
     *
     * @return string 
     */
    public function getCellulare()
    {
        return $this->cellulare;
    }

    /**
     * Set fax
     *
     * @param string $fax
     * @return Studio
     */
    public function setFax($fax)
    {
        $this->fax = $fax;
    
        return $this;
    }

    /**
     * Get fax
     *
     * @return string 
     */
    public function getFax()
    {
        return $this->fax;
    }

    /**
     * Set email
     *
     * @param string $email
     * @return Studio
     */
    public function setEmail($email)
    {
        $this->email = $email;
    
        return $this;
    }

    /**
     * Get email
     *
     * @return string 
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set sito
     *
     * @param string $sito
     * @return Studio
     */
    public function setSito($sito)
    {
        $this->sito = $sito;
    
        return $this;
    }

    /**
     * Get sito
     *
     * @return string 
     */
    public function getSito()
    {
        return $this->sito;
    }

    /**
     * Set referente
     *
     * @param Geastore $referente
     * @return Studio
     */
    public function setReferente($referente)
    {
        $this->referente = $referente;
    
        return $this;
    }

    /**
     * Get referente
     *
     * @return Gestore
     */
    public function getReferente()
    {
        return $this->referente;
    }

    /**
     * Set scadenzaLicenza
     *
     * @param \DateTime $scadenzaLicenza
     * @return Studio
     */
    public function setScadenzaLicenza($scadenzaLicenza)
    {
        $this->scadenzaLicenza = $scadenzaLicenza;
    
        return $this;
    }

    /**
     * Get scadenzaLicenza
     *
     * @return \DateTime 
     */
    public function getScadenzaLicenza()
    {
        return $this->scadenzaLicenza;
    }

    /**
     * Set bloccato
     *
     * @param boolean $bloccato
     * @return Studio
     */
    public function setBloccato($bloccato)
    {
        $this->bloccato = $bloccato;
    
        return $this;
    }

    /**
     * Get bloccato
     *
     * @return boolean 
     */
    public function getBloccato()
    {
        return $this->bloccato;
    }
    
    /**
     * @ORM\PrePersist
     */
    public function prePersist(){
        $this->scadenzaLicenza = new \DateTime();
        $this->bloccato = false;
    }
    
    public function __toString() {
        return $this->getNome();
    }

}
